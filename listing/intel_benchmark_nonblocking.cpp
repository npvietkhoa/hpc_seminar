MPI_Request reqs[4];
int flags[4]; 
MPI_Status stats[4]; 
MPI_Iallreduce(sub_arr1, sumA1temp, num_elements, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD, &reqs[0]); 
MPI_Wait(&reqs[0], &stats[0]);
sumA1 = sum(sumA1temp); 
avgA1 = sumA1/(num_elements*p);
sub_arr2 = scalarMultiply(sub_arr2, avgA1); 
MPI_Iallreduce(sub_arr2, minA2temp, num_elements, MPI_DOUBLE, MPI_MIN, MPI_COMM_WORLD, &reqs[1]);
MPI_Iallreduce(sub_arr2, maxA2temp, num_elements, MPI_DOUBLE, MPI_MAX, MPI_COMM_WORLD, &reqs[2]); 
sub_arr3 = scalarAdd(sub_arr3, avgA1);
MPI_Wait(&reqs[1], &stats[1]); 
minA2 = min(minA2temp);
MPI_Wait(&reqs[2], &stats[2]); 
maxA2 = max(maxA2temp);
sub_arr3 = scalarMultiply(sub_arr3, (minA2+maxA2)*0.5); 
MPI_Iallreduce(sub_arr3, sumA3temp, num_elements, MPI_DOUBLE, MPI_SUM, MPI_COMM_WORLD, &reqs[3]);
MPI_Wait(&reqs[3], &stats[3]); 
finalsum = sum(sumA3temp);